openapi: "3.0.0"
info:
  version: 1.0.0
  title: a Drugstore API
  description: '
  # Introduction
  
  Welcome to the Drugstore API v 1.0.0 test
  This API currently supports retrieving products (with details) and adding new products to our DB.
  
  # Authentication
  
  This API is protected with OAuth OIDC authentication protocol.
  In order to use this API commercially please register with our Authorization Server (@...) to obtain your cliend_id and secret.
  You will be then able to get an access token to call the API with.
  The process overview is shown at the diagram below.
  
  
  ![Sample OIDC sequence diagram](https://d33wubrfki0l68.cloudfront.net/3ad9fa733a0ced7c349230beaf1e481560aa6065/602fe/assets-jekyll/blog/client-creds-with-spring-boot/client-creds-jwt-90615dab46fe5a23d5bca2a29ec42e518683860826b70840fa2a6cea62108440.png)
  

  For further details please refer to the OAuth 2.0 RFC (Client Credentials Grant section).
  
  
  [OAuth2 RFC - Client Credentials Grant](https://tools.ietf.org/html/rfc6749#section-4.4)
  
  # Example responses
  
  This API documentation is available together with a Swaggerhub Mock Server returning sample responses to respective endpoints.
  Please note that the Mock server does not require an access token and is returning predefined, sample, static responses.
  
  The Mock Server address is available below.

  '
  
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Sample Mock Server
    url: https://virtserver.swaggerhub.com/test-ksa/Drugstore/1.0.0
paths:
  /products:
    get:
      summary: Returns a list of all products
      operationId: listProducts
      tags:
        - Product Management
      responses:
        '200':
          description: A paged array of products
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Products"
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
    post:
      summary: Adds a new product
      operationId: createProduct
      tags:
        - Product Management
      requestBody:
        description: Product to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewProduct'
      responses:
        '201':
          description: Product added
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
  /products/{productId}:
    get:
      summary: Detailed info for a specific product
      operationId: showProductById
      tags:
        - Product Management
      parameters:
        - name: productId
          in: path
          required: true
          description: The id of the product to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductDetails"
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        
components:
  responses:
    400:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    401:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
  schemas:
    Product:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
    ProductDetails:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
        description:
          type: string
    NewProduct:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        tag:
          type: string
    Products:
      type: array
      items:
        $ref: "#/components/schemas/Product"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string